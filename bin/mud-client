#!/usr/local/bin/php
<?php

$port       = 9000;
$address    = '192.168.1.33';

$port       = 9001;
$address    = 'localhost';

$port       = 9000;
$address    = 'balderdash.ru';

define ( 'KEY_ESC',         "\x1b" );
define ( 'KEY_ENTER',       "\x0d" );
define ( 'KEY_BACKSPACE',   "\x7f" );
define ( 'KEY_LEFT',        269);
define ( 'KEY_RIGHT',       261);
define ( 'KEY_UP',          259);
define ( 'KEY_DOWN',        258);
define ( 'KEY_PAGEUP',      339);
define ( 'KEY_PAGEDOWN',    338);

define ( 'BUFFER_UP',       'up');
define ( 'BUFFER_DOWN',     'down');

$GLOBALS['debug'] = 0;

ncurses_init();
ncurses_noecho();
ncurses_start_color();

$socket = @socket_create( AF_INET, SOCK_STREAM, SOL_TCP);
$connected = 0; 
if ( $socket ){
    $conected = socket_connect( $socket, $address, $port);
}

require_once __DIR__ . '/../lib/client/iostream.php';
require_once __DIR__ . '/../lib/client/iowindow.php';

require_once __DIR__ . '/../lib/client/color.php';
require_once __DIR__ . '/../lib/client/buffer.php';
require_once __DIR__ . '/../lib/client/window.php';
require_once __DIR__ . '/../lib/client/output.php';
require_once __DIR__ . '/../lib/client/prompt.php';
require_once __DIR__ . '/../lib/client/input.php';
require_once __DIR__ . '/../lib/client/history.php';
require_once __DIR__ . '/../lib/client/commands.php';

require_once __DIR__ . '/../etc/key-binding.php';

$prompt = new Prompt();
$output = new Output();

$iostream = new IOStream();
$iostream->addWindow('output', $output);
$iostream->addWindow('prompt', $prompt);
$iostream->run();

$pid = pcntl_fork();
if ($pid == -1) {

     die('could not fork');

} else if ($pid) {

    while (true){
        $input = ncurses_getch();

        write_log(sprintf("CHAR %x ord(%d)", $input, $input));

        if ( $input === false ){
            continue;
        }

        $result = command_manager( $input );

        if ($result === 0){
            //$iostream->event('output', 'dump');
            posix_kill( $pid, SIGUSR1);
            pcntl_wait($status); //Protect against Zombie children
            ncurses_end();
            break;
        }
    }
} 
else {
    $iostream->event('output', 'init');
    while ( true ){
        $server = @socket_read( $socket, 1024 );
        if ( $server ){
            $iostream->send('output', $server);
            $iostream->event('prompt', 'display_cursor');
        }
    }
}

function df($name, $msg){
    file_put_contents($name, "\n=========\n" . iconv('KOI8-R', 'UTF-8', $msg), FILE_APPEND);
}
