#!/usr/local/bin/php
<?php

#$port       = 9000;


$port       = 9000; 
$address    = 'balderdash.ru';
#$address    = 'aladon.sovintel.ru';

#$address    = 'localhost';
#$address    = '192.168.1.33';
#$address    = '192.168.1.34';
#$address    = 'tangent.dune.net';
#$port       = 6667;
#$address    = 'aardmud.org';
#$port       = 23;


define ( 'KEY_ESC',         "\x1b" );
define ( 'KEY_ENTER',       "\x0d" );
define ( 'KEY_BACKSPACE',   "\x7f" );
define ( 'KEY_LEFT',        269);
define ( 'KEY_RIGHT',       261);
define ( 'KEY_UP',          259);
define ( 'KEY_DOWN',        258);
define ( 'KEY_PAGEUP',      339);
define ( 'KEY_PAGEDOWN',    338);

define ( 'BUFFER_UP',       'up');
define ( 'BUFFER_DOWN',     'down');

define ( 'BUFFER_FILENAME', __DIR__ . '/../data/buffer.log');

$GLOBALS['debug'] = 0;

ncurses_init();
ncurses_noecho();
ncurses_start_color();

$socket = @socket_create( AF_INET, SOCK_STREAM, SOL_TCP);
$connected = 0; 
if ( $socket ){
    $conected = socket_connect( $socket, $address, $port);
}

require_once __DIR__ . '/../lib/client/iostream.php';
require_once __DIR__ . '/../lib/client/iowindow.php';

require_once __DIR__ . '/../lib/client/color.php';
require_once __DIR__ . '/../lib/client/buffer.php';
require_once __DIR__ . '/../lib/client/window.php';
require_once __DIR__ . '/../lib/client/output.php';
require_once __DIR__ . '/../lib/client/prompt.php';
require_once __DIR__ . '/../lib/client/input.php';
require_once __DIR__ . '/../lib/client/history.php';
require_once __DIR__ . '/../lib/client/commands.php';

require_once __DIR__ . '/../lib/client/plugin.php';

ncurses_assume_default_colors(NCURSES_COLOR_BLACK, NCURSES_COLOR_BLACK);
$colors =  array(
    '30'  => NCURSES_COLOR_GREEN,
    '31'  => NCURSES_COLOR_RED,
    '32'  => NCURSES_COLOR_GREEN,
    '33'  => NCURSES_COLOR_YELLOW,
    '34'  => NCURSES_COLOR_BLUE,
    '35'  => NCURSES_COLOR_MAGENTA,
    '36'  => NCURSES_COLOR_CYAN,
    '37'  => NCURSES_COLOR_WHITE,
);
foreach ($colors as $color) {
    ncurses_init_pair($color, $color, NCURSES_COLOR_BLACK);
}
Color::init($colors);

$prompt = new Prompt();
$output = new Output();

$iostream = new IOStream();
$iostream->addWindow('output', $output);
$iostream->addWindow('prompt', $prompt);
$iostream->run();

$history = History::instance();
if (file_exists( __DIR__ . '/../data/history.php')){
    $cmds = include __DIR__ . '/../data/history.php';
    $history->setHistory($cmds);
}

$pid = pcntl_fork();
if ($pid == -1) {

     die('could not fork');

} else if ($pid) {

    while (true){
        $input = ncurses_getch();

        write_log(sprintf("CHAR %x ord(%d)", $input, $input));

        if ( $input === false ){
            continue;
        }

        $result = command_manager( $input );

        if ($result === 0){
            //$iostream->event('output', 'dump');
            posix_kill( $pid, SIGUSR1);
            pcntl_wait($status); //Protect against Zombie children
            ncurses_end();

            file_put_contents(__DIR__ . '/../data/history.php', '<?php return ' . var_export(History::instance()->getHistory(), true) . ';');
            break;
        }
    }
} 
else {
    $iostream->event('output', 'init');

    //$iostream->send('output', "Connect to server\n");
    //$server = @socket_read( $socket, 1024 * 8);
    //$iostream->send('output', $server);

    // Load buffer
    if (file_exists(BUFFER_FILENAME)){
        $content = file_get_contents(BUFFER_FILENAME);
        $content = str_replace("\000", "\033[1;31m.\033[0m", $content);
        $content = explode("\n", $content);
        $content = array_slice($content, count($content) - 1000);
        $content = implode("\n", $content);
        $iostream->send('output', "\033[0;37m$content\033[0m");
        $iostream->send('output', "\033[0;31m---------------------------------------\033[0m\n");
    }

    setlocale(LC_ALL, 'ru_RU.KOI8-R');
    $manager = PluginManager::instance();

    while ( true ){
        $server = @socket_read( $socket, 1024 * 8);
        if ( $server ){

            $manager->prepare($server);
            file_put_contents(BUFFER_FILENAME, $server, FILE_APPEND);

            $manager->execute($server);

            $iostream->send('output', $server);
            $iostream->event('prompt', 'display_cursor');

        }
        else {
            $iostream->send('output', 'Disconnect from server');
            break;
        }
    }
}

function df($name, $msg){
    file_put_contents($name, "\n=========\n" . iconv('KOI8-R', 'UTF-8', $msg), FILE_APPEND);
}